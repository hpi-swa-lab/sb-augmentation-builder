/* esm.sh - esbuild bundle(style-mod@4.1.0) es2022 production */
var y="\u037C",g=typeof Symbol>"u"?"__"+y:Symbol.for(y),c=typeof Symbol>"u"?"__styleSet"+Math.floor(Math.random()*1e8):Symbol("styleSet"),w=typeof globalThis<"u"?globalThis:typeof window<"u"?window:{},b=class{constructor(e,n){this.rules=[];let{finish:i}=n||{};function l(t){return/^@/.test(t)?[t]:t.split(/,\s*/)}function s(t,h,a,C){let d=[],r=/^@(\w+)\b/.exec(t[0]),m=r&&r[1]=="keyframes";if(r&&h==null)return a.push(t[0]+";");for(let u in h){let o=h[u];if(/&/.test(u))s(u.split(/,\s*/).map(f=>t.map(p=>f.replace(/&/,p))).reduce((f,p)=>f.concat(p)),o,a);else if(o&&typeof o=="object"){if(!r)throw new RangeError("The value of a property ("+u+") should be a primitive value.");s(l(u),o,d,m)}else o!=null&&d.push(u.replace(/_.*/,"").replace(/[A-Z]/g,f=>"-"+f.toLowerCase())+": "+o+";")}(d.length||m)&&a.push((i&&!r&&!C?t.map(i):t).join(", ")+" {"+d.join(" ")+"}")}for(let t in e)s(l(t),e[t],this.rules)}getRules(){return this.rules.join(`
`)}static newName(){let e=w[g]||1;return w[g]=e+1,y+e.toString(36)}static mount(e,n,i){let l=e[c],s=i&&i.nonce;l?s&&l.setNonce(s):l=new S(e,s),l.mount(Array.isArray(n)?n:[n])}},T=new Map,S=class{constructor(e,n){let i=e.ownerDocument||e,l=i.defaultView;if(!e.head&&e.adoptedStyleSheets&&l.CSSStyleSheet){let s=T.get(i);if(s)return e.adoptedStyleSheets=[s.sheet,...e.adoptedStyleSheets],e[c]=s;this.sheet=new l.CSSStyleSheet,e.adoptedStyleSheets=[this.sheet,...e.adoptedStyleSheets],T.set(i,this)}else{this.styleTag=i.createElement("style"),n&&this.styleTag.setAttribute("nonce",n);let s=e.head||e;s.insertBefore(this.styleTag,s.firstChild)}this.modules=[],e[c]=this}mount(e){let n=this.sheet,i=0,l=0;for(let s=0;s<e.length;s++){let t=e[s],h=this.modules.indexOf(t);if(h<l&&h>-1&&(this.modules.splice(h,1),l--,h=-1),h==-1){if(this.modules.splice(l++,0,t),n)for(let a=0;a<t.rules.length;a++)n.insertRule(t.rules[a],i++)}else{for(;l<h;)i+=this.modules[l++].rules.length;i+=t.rules.length,l++}}if(!n){let s="";for(let t=0;t<this.modules.length;t++)s+=this.modules[t].getRules()+`
`;this.styleTag.textContent=s}}setNonce(e){this.styleTag&&this.styleTag.getAttribute("nonce")!=e&&this.styleTag.setAttribute("nonce",e)}};export{b as StyleModule};
